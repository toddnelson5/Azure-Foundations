https://docs.microsoft.com/en-us/azure/azure-resource-manager/templates/deploy-to-resource-group?tabs=azure-cli


resource symbolicname 'Microsoft.Network/virtualNetworks/virtualNetworkPeerings@2022-01-01' = {
  name: 'string'
  parent: resourceSymbolicName
  properties: {
    allowForwardedTraffic: bool
    allowGatewayTransit: bool
    allowVirtualNetworkAccess: bool
    doNotVerifyRemoteGateways: bool
    peeringState: 'string'
    peeringSyncLevel: 'string'
    remoteAddressSpace: {
      addressPrefixes: [
        'string'
      ]
    }
    remoteBgpCommunities: {
      virtualNetworkCommunity: 'string'
    }
    remoteVirtualNetwork: {
      id: 'string'
    }
    remoteVirtualNetworkAddressSpace: {
      addressPrefixes: [
        'string'
      ]
    }
    useRemoteGateways: bool
  }
}


@description('Set the local VNet name')
param existingLocalVirtualNetworkName string

@description('Set the remote VNet name')
param existingRemoteVirtualNetworkName string

@description('Sets the remote VNet Resource group')
param existingRemoteVirtualNetworkResourceGroupName string

resource existingLocalVirtualNetworkName_peering_to_remote_vnet 'Microsoft.Network/virtualNetworks/virtualNetworkPeerings@2021-02-01' = {
  name: '${existingLocalVirtualNetworkName}/peering-to-remote-vnet'
  properties: {
    allowVirtualNetworkAccess: true
    allowForwardedTraffic: false
    allowGatewayTransit: false
    useRemoteGateways: false
    remoteVirtualNetwork: {
      id: resourceId(existingRemoteVirtualNetworkResourceGroupName, 'Microsoft.Network/virtualNetworks', existingRemoteVirtualNetworkName)
    }
  }
}



Using Scope to reference resources in other Resource Groups or Subscriptions
The documented spec for this can be found here: bicep/resource-scopes.md at main Â· Azure/bicep (github.com)

Maybe its just me but I have to admit I found this documentation a little less clear (not sure why when I read it now its obvious). When declaring resources in another RG or Sub you need to add scope to your declaration.

When declaing the resource simply add the scope tag as shown below where the scope is ResourceGroup(). The ResourceGroup() function is expecting a string or two strings of the reference resource group or the external subsrption and the resource groups.

Note: I have decared the vnetRg as a param of type string

resource vnetExternal 'Microsoft.Network/virtualNetworks@2020-08-01' existing = {
  name : vnetName
  scope: resourceGroup(vnetRg)
}
or

resource vnetExternal 'Microsoft.Network/virtualNetworks@2020-08-01' existing = {
  name : vnetName
  scope: resourceGroup(subId,vnetRg)
}
The full example showing the declared parameters would be this

param subnetName string = 'snet-apps-dev-uks-001'
param vnetName string = 'vnet-dev-uks-001'
param vnetRg string = 'rg-net-uks-dev-001'

var subnetRef = '${vnetExternal.id}/subnets/${subnetName}'
var location = resourceGroup().location
var networkInterfaceName = 'nic-${virtualMachineName}'
var virtualMachineComputerName = virtualMachineName

resource vnetExternal 'Microsoft.Network/virtualNetworks@2020-08-01' existing = {
  name : vnetName
  scope: resourceGroup(vnetRg)
}

resource networkInterfaceName_resource 'Microsoft.Network/networkInterfaces@2018-10-01' = {
  name: networkInterfaceName
  location: location
  properties: {
    ipConfigurations: [
      {
        name: 'ipconfig1'
        properties: {
          subnet: {
            id: subnetRef
          }
          privateIPAllocationMethod: 'Dynamic'
          publicIPAddress: {
            id: resourceId(resourceGroup().name, 'Microsoft.Network/publicIpAddresses', publicIpAddressName_resource.name)
          }
        }
      }